---
  version: '2.3'
  services:
    zookeeper:
      image: msbase-docker.artifactory.ext.national.com.au/cp-zookeeper:5.0.0
      container_name: zookeeper
      hostname: zookeeper
      ports:
        - '32181:32181'
      environment:
        ZOOKEEPER_CLIENT_PORT: 32181
        ZOOKEEPER_TICK_TIME: 2000
      extra_hosts:
        - "moby:127.0.0.1"
  
    kafka1:
      image: msbase-docker.artifactory.ext.national.com.au/cp-enterprise-kafka:5.0.0
      container_name: kafka1
      hostname: kafka1
      ports:
        - '9092:9092'
        - '29092:29092'
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29092
        CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      extra_hosts:
        - "moby:127.0.0.1"
      healthcheck:
        test: [ "CMD", "kafka-topics", "--zookeeper", "zookeeper:32181", "--list" ]
        interval: 10s
        timeout: 10s
        retries: 3
  
    kafka2:
      image: msbase-docker.artifactory.ext.national.com.au/cp-enterprise-kafka:5.0.0
      container_name: kafka2
      hostname: kafka2
      ports:
        - '9093:9093'
        - '29093:29093'
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://localhost:9093
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka2:29093
        CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      extra_hosts:
        - "moby:127.0.0.1"
      healthcheck:
        test: [ "CMD", "kafka-topics", "--zookeeper", "zookeeper:32181", "--list" ]
        interval: 10s
        timeout: 10s
        retries: 3
  
    kafka3:
      image: msbase-docker.artifactory.ext.national.com.au/cp-enterprise-kafka:5.0.0
      container_name: kafka3
      hostname: kafka3
      ports:
        - '9094:9094'
        - '29094:29094'
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 3
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://localhost:9094
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka3:29094
        CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      extra_hosts:
        - "moby:127.0.0.1"
      healthcheck:
        test: [ "CMD", "kafka-topics", "--zookeeper", "zookeeper:32181", "--list" ]
        interval: 10s
        timeout: 10s
        retries: 3
  
    control-center:
      image: msbase-docker.artifactory.ext.national.com.au/cp-enterprise-control-center:5.0.0
      container_name: control-center
      restart: always
      depends_on:
        - zookeeper
        - kafka1
        - kafka2
        - kafka3
      ports:
        - '9021:9021'
        - '9022:9022'
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka1:29092,kafka2:29093,kafka3:29094"
        CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:32181"
        CONTROL_CENTER_REPLICATION_FACTOR: 2
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 2
        CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 2
        CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 2
        CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 2
        CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
        CONTROL_CENTER_CONNECT_CLUSTER: "https://connect:8083"
        CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
        CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
        CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
        CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: PLAINTEXT
        # HTTP and HTTPS to Control Center UI
        CONTROL_CENTER_REST_LISTENERS: "http://0.0.0.0:9021,https://0.0.0.0:9022"
        CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
  
    schema-registry:
      image: msbase-docker.artifactory.ext.national.com.au/cp-schema-registry:5.0.0
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - zookeeper
        - kafka1
        - kafka2
        - kafka3
      ports:
        - '8081:8081'
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
        SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 2
      extra_hosts:
        - "moby:127.0.0.1"
  
  #  kafka-create-topics:
  #    image: msbase-docker.artifactory.ext.national.com.au/cp-kafka:5.0.0
  #    depends_on:
  #      kafka1:
  #        condition: service_healthy
  #      kafka2:
  #        condition: service_healthy
  #      kafka3:
  #        condition: service_healthy
  #    hostname: kafka-create-topics
  #    container_name: kafka-create-topic
  #    volumes:
  #      - ./initializeKafka.sh:/usr/local/bin/initializeKafka.sh
  #      - ../../avro:/opt/bin/kafka/avro
  #    command: "bash -c '/usr/local/bin/initializeKafka.sh'"
  #    environment:
  #      KAFKA_BROKER_ID: ignored
  #      KAFKA_ZOOKEEPER_CONNECT: ignored
  #    extra_hosts:
  #      - "moby:127.0.0.1"